<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.zendaimoney.thirdpp</groupId>
	<artifactId>thirdpp-new-parent</artifactId>
	<packaging>pom</packaging>
	<version>1.0.4</version>
	<organization>
		<name>Zendai</name>
		<url>http://www.zendai.com/</url>
	</organization>
	<modules>
		<module>thirdpp-common</module>
		<module>thirdpp-channel</module>
		<module>thirdpp-trade</module>
		<module>thirdpp-transfer</module>
		<module>thirdpp-query</module>
		<module>thirdpp-notify</module>
		<module>thirdpp-manager</module>
		<module>thirdpp-alarm</module>
		<module>thirdpp-account</module>
		<module>thirdpp-trust-channel</module>
        <module>thirdpp-route</module>
		<module>thirdpp-route-transfer</module>
	</modules>

	<properties>
		<!-- 主要依赖库的版本定义 -->
        <spring-version>3.2.9.RELEASE</spring-version>
		<cglib-version>2.2</cglib-version>
		<aspectj-version>1.7.3</aspectj-version>
        <ibatis-version>2.3.4.726</ibatis-version>
		<!-- ibatis 2.3.4.726版本的Bug修复，解决了sqlMapConfig里必须有一个sqlmap的问题 -->
		<mybatis-version>2.3.5</mybatis-version>
        <druid-version>1.0.6</druid-version>
        <junit-version>4.8.1</junit-version>
        <commons-beanutils-version>1.8.2</commons-beanutils-version>
        <commons-collections-version>3.2.1</commons-collections-version>
        <commons-lang-version>2.5</commons-lang-version>
        <slf4j-version>1.7.7</slf4j-version>
        <servlet-api-version>2.5</servlet-api-version>
        <jsp-api-version>2.2</jsp-api-version>
        <el-api-version>2.2</el-api-version>
        <jstl-version>1.2</jstl-version>
        <urlrewrite-version>3.1.0</urlrewrite-version>
        <dubbo-version>2.5.3</dubbo-version>
        <curator-version>1.3.3</curator-version>
        <zkclient-version>0.4</zkclient-version>
        <netty-version>3.9.2.Final</netty-version>
		<validation-api-version>1.1.0.Final</validation-api-version>
		<hibernate-validator-version>4.3.0.Final</hibernate-validator-version>
		<!-- Plugin的属性定䷿-->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jdk.version>1.7</jdk.version>
	</properties>
	<!-- 设定除中央仓帿repo1.maven.org/maven2/)外的其他仓库,按设定顺序进行查懿 -->
	<repositories>

		<repository>
			<id>nexus</id>
			<name>Team Nexus Repository</name>
			<url>http://nexus.yuminsoft.local/content/groups/public</url>
		</repository>
		<repository>
			<id>thirdparty</id>
			<name>Team Nexus thirdparty</name>
			<url>http://nexus.yuminsoft.local/content/repositories/thirdparty</url>
		</repository>

	</repositories>


	<pluginRepositories>
		<pluginRepository>
			<id>nexus</id>
			<name>Team Nexus Repository</name>
			<url>http://nexus.yuminsoft.local/content/groups/public</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>


	<!-- 预定义依赖项的version,scope与exclusions,子项目中只需定义groupId 吿artifactId 即可 -->
	<dependencies>
			<!-- validation -->
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${validation-api-version}</version>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator-version}</version>
			</dependency>

			<!-- spring -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring-version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring-version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring-version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring-version}</version>
			</dependency>
      	<!-- oracle -->
			<dependency>
				<groupId>ojdbc</groupId>
				<artifactId>ojdbc</artifactId>
				<version>14</version>
			</dependency>      
            <!--  spring aop  -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-aop</artifactId>
                <version>${spring-version}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjrt</artifactId>
                <version>${aspectj-version}</version>
            </dependency>
            <dependency>
                <groupId>org.aspectj</groupId>
                <artifactId>aspectjweaver</artifactId>
                <version>${aspectj-version}</version>
            </dependency>
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>${cglib-version}</version>
            </dependency>
            <!--  spring aop end  -->

            <!--  jsr250 annotation ,取代setter 注入Resources  -->
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>jsr250-api</artifactId>
                <version>1.0</version>
            </dependency>

            <!--  orm begin  -->
            <!--  druid dataSource Pool  -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid-version}</version>
            </dependency>
            <!--  ibatis sqlMap  -->
            <dependency>
                <groupId>org.apache.ibatis</groupId>
                <artifactId>ibatis-sqlmap</artifactId>
                <version>${ibatis-version}</version>
            </dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis-version}</version>
			</dependency>
            <!--  orm end  -->

            <!--  web begin  -->
            <!--  spring mvc  -->
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-webmvc</artifactId>
                <version>${spring-version}</version>
            </dependency>
            <!--  urlrewrite  -->
            <dependency>
                <groupId>org.tuckey</groupId>
                <artifactId>urlrewritefilter</artifactId>
                <version>${urlrewrite-version}</version>
            </dependency>
            <!--  j2ee web spec  -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>${servlet-api-version}</version>
            </dependency>
            <dependency>
                <groupId>javax.servlet.jsp</groupId>
                <artifactId>jsp-api</artifactId>
                <version>${jsp-api-version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.el</groupId>
                <artifactId>el-api</artifactId>
                <version>${el-api-version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>jstl</artifactId>
                <version>${jstl-version}</version>
            </dependency>
            <!--  web end  -->
            <!--  log begin  -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j-version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j-version}</version>
            </dependency>
            <!--  log end  -->
            <!--  apache utils begin  -->
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils-version}</version>
            </dependency>
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commons-collections-version}</version>
            </dependency>
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang-version}</version>
            </dependency>
            <!--  utils end  -->
            <!--  test begin  -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit-version}</version>
                <scope>test</scope>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-test</artifactId>
                <version>${spring-version}</version>
                <scope>test</scope>
                <optional>true</optional>
            </dependency>
            <!--  test end  -->
            <!--  dubbo begin  -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>dubbo</artifactId>
                <version>${dubbo-version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring</artifactId>
                    </exclusion>
					<exclusion>
						<groupId>org.jboss.netty</groupId>
						<artifactId>netty</artifactId>
					</exclusion>
                </exclusions>
            </dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty</artifactId>
				<version>${netty-version}</version>
			</dependency>
            <dependency>
                <groupId>com.netflix.curator</groupId>
                <artifactId>curator-framework</artifactId>
                <version>${curator-version}</version>
            </dependency>
            <dependency>
                <groupId>com.101tec</groupId>
                <artifactId>zkclient</artifactId>
                <version>${zkclient-version}</version>
            </dependency>
            <!--  dubbo end  -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>1.16.20</version>
				<scope>provided</scope>
			</dependency>
	</dependencies>

	<!-- 插件配置 -->
	<build>
		<pluginManagement>
			<plugins>
				<!-- compiler插件, 设定JDK版本 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<source>${jdk.version}</source>
						<target>${jdk.version}</target>
						<showWarnings>true</showWarnings>
					</configuration>
				</plugin>

				<!-- resource插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>2.5</version>
				</plugin>

				<!-- test插件, 仅测试名称为*Test的类,使用支持分组测试的surefire-junit47 driver -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.12</version>
					<configuration>
						<includes>
							<include>**/*Test.java</include>
						</includes>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.surefire</groupId>
							<artifactId>surefire-junit47</artifactId>
							<version>2.12</version>
						</dependency>
					</dependencies>
				</plugin>

				<!-- 增加更多的Source和Test Source目录插件 -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.7</version>
				</plugin>

				<!-- cobertura 测试覆盖率统计插乿-->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>cobertura-maven-plugin</artifactId>
					<version>2.5.1</version>
				</plugin>

				<!-- war打包插件, 设定war包名称不带版本号 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.2</version>
					<configuration>
						<warName>${project.artifactId}</warName>
					</configuration>
				</plugin>

				<!-- jar打包相关插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>2.4</version>
					<configuration>
						<archive>
							<manifest>
								<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							</manifest>
						</archive>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>2.1.2</version>
				</plugin>

				<!-- clean插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.4.1</version>
				</plugin>

				<!-- install插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.3.1</version>
				</plugin>

				<!-- eclipse插件,设定下载Source -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-eclipse-plugin</artifactId>
					<version>2.9</version>
					<configuration>
						<downloadSources>true</downloadSources>
						<downloadJavadocs>false</downloadJavadocs>
					</configuration>
				</plugin>

				<!-- jetty插件 -->
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>jetty-maven-plugin</artifactId>
					<version>${jetty.version}</version>
				</plugin>

				<!-- assembly插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>2.3</version>
				</plugin>

				<!-- dependency相关插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>2.4</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>1.3.1</version>
				</plugin>

				<!-- ant插件 -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.7</version>
				</plugin>

				<!-- exec java 插件 -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>1.2.1</version>
				</plugin>

				<!-- sonar插件 -->
				<plugin>
					<groupId>org.codehaus.sonar</groupId>
					<artifactId>sonar-maven3-plugin</artifactId>
					<version>3.0</version>
				</plugin>
							<plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <skip>true</skip>
        </configuration>
      </plugin>
			</plugins>
		</pluginManagement>
	</build>
	<distributionManagement>
		<repository>
			<id>releases</id>
			<name>Internal Releases</name>
			<url>http://nexus.yuminsoft.local/content/repositories/releases/</url>
		</repository>
		<snapshotRepository>
			<uniqueVersion>true</uniqueVersion>
			<id>snapshots</id>
			<name>Internal  Snapshots</name>
			<url>http://nexus.yuminsoft.local/content/repositories/snapshots/</url>
		</snapshotRepository>
	</distributionManagement>
</project>